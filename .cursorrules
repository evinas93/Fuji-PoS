{
  "allow": ["*.env", ".env.local", ".env.development", ".env.production", ".env.test"],
  "project_context": {
    "name": "Fuji Restaurant Point of Sale (POS) System",
    "version": "1.0",
    "timeline": "20 weeks (September 2025 - February 2026)",
    "type": "Complete digital transformation from paper-based to modern POS system",
    
    "technology_stack": {
      "frontend": "React/Next.js (touch-optimized for tablets)",
      "backend": "Node.js with TypeScript and Express.js RESTful APIs",
      "database": "Supabase (PostgreSQL with built-in auth, real-time, and API)",
      "payment_processing": "Integration with credit card processors (Stripe/Square)",
      "deployment": "Vercel/Netlify for frontend, Supabase for backend/database",
      "hardware": "iPad/Android tablets, thermal printers, POS terminals"
    },
    
    "core_modules": [
      "Digital menu management with real-time updates",
      "Touch-optimized order processing (dine-in/take-out)",
      "Automated payment processing and receipt generation",
      "Role-based user authentication (manager/server/cashier/kitchen)",
      "Real-time sales tracking and analytics dashboard",
      "Kitchen display system integration",
      "Comprehensive reporting and business insights"
    ],
    
    "database_schema": {
      "profiles": "id (uuid), username, role, first_name, last_name, status, created_at, updated_at",
      "menu_items": "id (uuid), category_id, name, description, base_price, price_variations (jsonb), modifiers (jsonb), availability, special_flags (jsonb), created_at, updated_at",
      "categories": "id (uuid), name, display_order, active, created_at, updated_at",
      "orders": "id (uuid), order_date, type (dine_in/take_out), table_number, server_id (uuid), status, subtotal, tax, gratuity, total, payment_method, created_at, updated_at",
      "order_items": "id (uuid), order_id (uuid), item_id (uuid), quantity, unit_price, modifiers (jsonb), special_instructions, created_at",
      "daily_sales": "date, togo_sales, dine_in_sales, tax_collected, gross_sale, gratuity_total, net_sale, credit_total, cash_deposited"
    },
    
    "api_endpoints": {
      "auth": ["POST /api/auth/signup", "POST /api/auth/signin", "POST /api/auth/signout", "GET /api/auth/user", "PUT /api/profiles/:id"],
      "menu": ["GET /api/menu/items", "POST /api/menu/items", "PUT /api/menu/items/:id", "DELETE /api/menu/items/:id", "GET /api/menu/categories", "PUT /api/menu/items/:id/availability"],
      "orders": ["POST /api/orders", "PUT /api/orders/:id", "GET /api/orders/active", "GET /api/orders/:id", "POST /api/orders/:id/payment", "PUT /api/orders/:id/status"],
      "analytics": ["GET /api/analytics/daily", "GET /api/analytics/trends", "GET /api/analytics/real-time", "GET /api/reports/sales/:date", "GET /api/reports/export"]
    },
    
    "business_requirements": {
      "operational_targets": {
        "order_processing_time": "<30 seconds (40% improvement)",
        "payment_processing": "<45 seconds completion time",
        "daily_reconciliation": "<5 minutes (from 30 minutes)",
        "system_uptime": ">99.9% during business hours",
        "order_accuracy": ">99% (reduce errors by 50%)"
      },
      "financial_targets": {
        "average_ticket_increase": "15% through intelligent upselling",
        "transaction_volume": "10% increase",
        "labor_cost_reduction": "10%",
        "roi_achievement": "Within 12 months",
        "credit_card_error_reduction": "95%"
      }
    },
    
    "menu_structure": {
      "beverages": "Red Wine (5), White Wine (4), Blush Wine (3), Plum Wine (2), Domestic Beer (5), Imported Beer (3), Sake (3), Soft Drinks (7)",
      "food": "Sushi Rolls (11), Tempura Appetizers (3), Lunch Specials (10+), Early Bird Specials (3), Dinner Entrées (25+), Side Orders (6), Children's Menu (3)"
    },
    
    "pricing_rules": {
      "price_variations": "Glass/Bottle for wines, Lunch/Dinner pricing",
      "modifiers": "Sauce options, cooking preferences, portion sizes",
      "automatic_charges": "Split plate charges, service charges",
      "tax_rate": "Configurable by jurisdiction",
      "gratuity": "20% automatic for parties of 2 or more",
      "service_charge": "3.5% for credit card payments"
    },
    
    "payment_processing": {
      "methods": ["Cash payments with change calculation", "Credit/debit card processing (PCI DSS compliant)", "Split payments between multiple methods", "Partial payment handling", "Refund processing with manager approval"],
      "calculation_engine": {
        "subtotal": "Sum of (item_price × quantity) + modifiers",
        "tax": "Subtotal × tax_rate",
        "gratuity": "(Subtotal + Tax) × 0.20 (if party ≥ 2)",
        "service_charge": "Total × 0.035 (if credit card)",
        "final_total": "Subtotal + Tax + Gratuity + Service_Charge - Discounts"
      }
    },
    
    "ui_specifications": {
      "design_principles": {
        "touch_first": "44x44 pixel minimum touch targets",
        "visual_hierarchy": "Primary and secondary actions distinct",
        "responsive": "Works on tablets (primary) and desktop",
        "color_coding": "Consistent status indicators (pending/preparing/ready)",
        "progressive_disclosure": "Advanced features hidden until needed"
      }
    },
    
    "security_requirements": {
      "pci_compliance": "For payment processing (handled by Stripe)",
      "supabase_rls": "Database-level access control",
      "rbac": "Manager/Server/Cashier/Kitchen roles via Supabase Auth",
      "password_requirements": "Supabase Auth with customizable password policies",
      "session_management": "JWT tokens with configurable expiration",
      "audit_trail": "All transactions logged with Supabase built-in audit features",
      "data_encryption": "SSL/TLS for transmission, AES-256 encryption at rest (Supabase default)"
    },
    
    "testing_requirements": {
      "unit_tests": "90%+ code coverage for backend APIs",
      "integration_tests": "Complete order-to-payment workflows",
      "user_acceptance_tests": "Real staff testing scenarios",
      "performance_tests": "50 concurrent users, <2 second response times",
      "security_tests": "Penetration testing, vulnerability scans",
      "cross_browser_tests": "Chrome, Safari, Edge compatibility"
    },
    
    "deployment_strategy": {
      "phases": [
        "Phase 1 (Weeks 1-4): Supabase setup, TypeScript backend foundation, database schema",
        "Phase 2 (Weeks 5-12): Core development (menu, orders, payments with Stripe)",
        "Phase 3 (Weeks 13-16): Advanced features (analytics, real-time updates, reporting)",
        "Phase 4 (Weeks 17-18): Testing and quality assurance",
        "Phase 5 (Weeks 19-20): Production deployment (Vercel + Supabase Pro)",
        "Phase 6 (Weeks 21-24): Post-launch support and optimization"
      ]
    },
    
    "typescript_types": {
      "MenuItemType": {
        "id": "string",
        "category_id": "string",
        "name": "string",
        "description": "string",
        "base_price": "number",
        "price_variations": "Record<string, number>",
        "modifiers": "ModifierType[]",
        "availability": "boolean",
        "special_flags": "string[]",
        "created_at": "string",
        "updated_at": "string"
      },
      "OrderType": {
        "id": "string",
        "order_date": "string",
        "type": "'dine_in' | 'take_out'",
        "table_number": "number?",
        "server_id": "string",
        "status": "'pending' | 'preparing' | 'ready' | 'completed' | 'cancelled'",
        "subtotal": "number",
        "tax": "number",
        "gratuity": "number",
        "total": "number",
        "payment_method": "'cash' | 'credit' | 'debit'?",
        "created_at": "string",
        "updated_at": "string"
      },
      "UserProfile": {
        "id": "string",
        "username": "string",
        "role": "'manager' | 'server' | 'cashier' | 'kitchen'",
        "first_name": "string",
        "last_name": "string",
        "status": "'active' | 'inactive'",
        "created_at": "string",
        "updated_at": "string"
      }
    },
    
    "development_guidelines": {
      "code_style": [
        "Follow modern TypeScript best practices with strict type checking",
        "Use consistent naming conventions (camelCase for variables, PascalCase for components/types)",
        "Implement proper error handling with custom error types",
        "Write comprehensive unit tests with Jest and Supertest",
        "Document all API endpoints with OpenAPI/Swagger",
        "Follow security best practices (never log sensitive data)",
        "Use Supabase Row Level Security (RLS) policies for data access control"
      ],
      "integration_points": [
        "Supabase Services: Database, Auth, Real-time subscriptions, Storage",
        "Payment Processors: Stripe API for credit card processing",
        "Thermal Printer Integration: ESC/POS protocol for receipt printing",
        "Kitchen Display: Real-time order updates via Supabase subscriptions",
        "Email/SMS: Supabase Edge Functions with Twilio/SendGrid",
        "File Storage: Supabase Storage for menu images and receipts",
        "Analytics: Custom TypeScript functions with Supabase database functions"
      ],
      "performance_considerations": [
        "Database: Supabase automatic indexing + custom indexes for complex queries",
        "Frontend: Next.js optimization with bundle splitting and lazy loading",
        "CDN: Supabase CDN for static assets and images",
        "Caching: Supabase built-in caching + Redis for session data",
        "Real-time: Supabase real-time subscriptions for order updates",
        "Mobile-first: Responsive design with touch-optimized components",
        "TypeScript: Compile-time optimizations and tree-shaking"
      ]
    },
    
    "success_criteria": {
      "must_have_features": [
        "Digital menu management with real-time updates",
        "Touch-optimized order processing",
        "Automated payment processing and receipt generation",
        "Role-based user authentication",
        "Basic sales reporting and analytics",
        "Kitchen display system integration"
      ],
      "nice_to_have_features": [
        "Online ordering system integration",
        "Customer-facing mobile app",
        "Advanced inventory management",
        "Marketing automation",
        "Multi-location support",
        "AI-powered sales insights"
      ]
    },
    
    "environment_variables": {
      "required": [
        "NEXT_PUBLIC_SUPABASE_URL=your-project-url",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key",
        "SUPABASE_SERVICE_ROLE_KEY=your-service-role-key (server-side only)"
      ]
    },
    
    "references": {
      "prd_document": "fuji-pos-prd.md",
      "claude_context": "CLAUDE.md",
      "project_checklist": "tasks.json"
    }
  }
}